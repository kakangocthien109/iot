- Biến có thể được thay đổi giá trị
- Kiểu dữ liệu:
    + Integer (int): Số nguyên, có kích thước là 4 byte
    VD: int x;
    + Character (char): Ký tự, có kích thước là 1 byte. Có thể thao tác như 1 số nguyên theo bảng ASCII.
                        Mỗi ký tự chỉ biểu diễn trong phạm vi 8 bit
    VD: char c
    + Float (float): số thực, độ chính xác đơn, có kích thước 4 byte
    VD: float y 
    + Double (double): số thực, độ chính xác kép, có kích thước 8 byte
    VD: double z
    + Enum: liệt kê tất cả các giá trị trong khi khai báo. Lưu ý là giá trị của kiểu liệt kê được tính thành số nguyên.
    VD: 
    enum month {Jan, Feb, Mar, Apr = 10, May, Jun, Jul, Aug, Sep, Oct, Nov, Dec};
    enum month thisMonth;
    thisMonth = Sep;
    printf("%d \n", thisMonth);

- Thêm long vào trước 1 kiểu dữ liệu để gấp đôi kích thước. 
- Thêm short vào trước 1 kiểu dữ liệu để chia 2 kích thước
- Chỉ dùng cho int, double
VD: long double x

- Muốn có số nguyên dương thì thêm unsigned vào trước, giá trị >=0

- int, char, float,... là kiểu dữ liệu
- x, x1, x2, y, z... là biến

- Kiểu định dạng thường dùng:
    + c: hiển thị ký tự
    + d/i : số nguyên hệ thập phân có dấu
    + f: số thực dấu chấm động hệ thập phân, mặc định 6 chữ số sau dấu chấm
    + g: số thực dấu chấm động hệ thập phân.
    + s: Chuỗi ký tự
    + u: Số nguyên hệ thập phân không dấu
    + ld: số nguyên hệ thập phân có dấu 8 byte.
    + Lf: Long double.
    + .<số ký số>f: ghi phần thập phân đến số

- Có thể vừa khai báo vừa gán giá trị, VD như int g = 1
- Toán tử 3 ngôi: <biến> = <điều kiện> ? < biểu thức 1> : <biểu thức 2>;
- Dịch trái 1 là x2, dịch phải 1 là chia 2

# /*---------------------------------------------------
# |                         Mảng                       |
# ---------------------------------------------------*/

- Khai báo 1 mảng: <kieu du lieu> ten[<kich thuoc mang>];
- Ví dụ: khai bảo mảng a gồm 100 phần tử kiểu integer: int a[100];
- Để truy nhập phần tử của mảng, ta có thể có 2 cách:
    + Cách 1: a[i], ví dụ a[9] là mình truy nhâp phần tử số 10 của mảng vì index bắt đầu từ 0 => vậy mảng trên, có các phần tử: 0-99
    + Cách 2: Dùng pointer, '*(a + i) , ví dụ '*(a+9) thì cũng tương đương a[9]

- Ví dụ bạn cần sắp xếp 10 số integer, nhập từ bàn phím
    + Trước tiên bạn cần có 1 mảng arr[10]; để lưu trữ các số trên
    + Sau đó mới sắp xếp các giá trị trong mảng đó

- Nếu chương trình chỉ yêu cầu sắp xếp 5 số integer thì ta có thể làm:
    + Ta có thể làm: int a1, a2, a3, a4, a5;

- Tuy nhiên, nếu đề bài yêu cầu sắp xếp 100 phần tử thì không thể khai báo kiểu trên được, mà phải dùng int a[100]; 

- Nên dùng kiểu khai báo <kieu du lieu> ten[<kich thuoc mang>];

- Liệt kê tất các hàm xử lý chuỗi, cách sử dụng, chức năng
* VD: islower,...

